<?php

namespace DoctrineORMModule\Proxy\__CG__\Academia\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Aluno extends \Academia\Entity\Aluno implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Academia\\Entity\\Aluno' . "\0" . 'id', '' . "\0" . 'Academia\\Entity\\Aluno' . "\0" . 'nome', '' . "\0" . 'Academia\\Entity\\Aluno' . "\0" . 'cpf', '' . "\0" . 'Academia\\Entity\\Aluno' . "\0" . 'rg', '' . "\0" . 'Academia\\Entity\\Aluno' . "\0" . 'email', '' . "\0" . 'Academia\\Entity\\Aluno' . "\0" . 'objetivo', '' . "\0" . 'Academia\\Entity\\Aluno' . "\0" . 'endereco', 'underscoreSeparatedKeys', 'strategies', 'namingStrategy', 'filterComposite');
        }

        return array('__isInitialized__', '' . "\0" . 'Academia\\Entity\\Aluno' . "\0" . 'id', '' . "\0" . 'Academia\\Entity\\Aluno' . "\0" . 'nome', '' . "\0" . 'Academia\\Entity\\Aluno' . "\0" . 'cpf', '' . "\0" . 'Academia\\Entity\\Aluno' . "\0" . 'rg', '' . "\0" . 'Academia\\Entity\\Aluno' . "\0" . 'email', '' . "\0" . 'Academia\\Entity\\Aluno' . "\0" . 'objetivo', '' . "\0" . 'Academia\\Entity\\Aluno' . "\0" . 'endereco', 'underscoreSeparatedKeys', 'strategies', 'namingStrategy', 'filterComposite');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Aluno $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNome($nome)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNome', array($nome));

        return parent::setNome($nome);
    }

    /**
     * {@inheritDoc}
     */
    public function getNome()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNome', array());

        return parent::getNome();
    }

    /**
     * {@inheritDoc}
     */
    public function setCpf($cpf)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCpf', array($cpf));

        return parent::setCpf($cpf);
    }

    /**
     * {@inheritDoc}
     */
    public function getCpf()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCpf', array());

        return parent::getCpf();
    }

    /**
     * {@inheritDoc}
     */
    public function setRg($rg)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRg', array($rg));

        return parent::setRg($rg);
    }

    /**
     * {@inheritDoc}
     */
    public function getRg()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRg', array());

        return parent::getRg();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setObjetivo($objetivo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setObjetivo', array($objetivo));

        return parent::setObjetivo($objetivo);
    }

    /**
     * {@inheritDoc}
     */
    public function getObjetivo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getObjetivo', array());

        return parent::getObjetivo();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndereco(\Academia\Entity\Endereco $endereco = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndereco', array($endereco));

        return parent::setEndereco($endereco);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndereco()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndereco', array());

        return parent::getEndereco();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', array());

        return parent::toArray();
    }

    /**
     * {@inheritDoc}
     */
    public function setOptions($options)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOptions', array($options));

        return parent::setOptions($options);
    }

    /**
     * {@inheritDoc}
     */
    public function setUnderscoreSeparatedKeys($underscoreSeparatedKeys)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUnderscoreSeparatedKeys', array($underscoreSeparatedKeys));

        return parent::setUnderscoreSeparatedKeys($underscoreSeparatedKeys);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnderscoreSeparatedKeys()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnderscoreSeparatedKeys', array());

        return parent::getUnderscoreSeparatedKeys();
    }

    /**
     * {@inheritDoc}
     */
    public function extract($object)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'extract', array($object));

        return parent::extract($object);
    }

    /**
     * {@inheritDoc}
     */
    public function hydrate(array $data, $object)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hydrate', array($data, $object));

        return parent::hydrate($data, $object);
    }

    /**
     * {@inheritDoc}
     */
    public function addFilter($name, $filter, $condition = 1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFilter', array($name, $filter, $condition));

        return parent::addFilter($name, $filter, $condition);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFilter($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFilter', array($name));

        return parent::removeFilter($name);
    }

    /**
     * {@inheritDoc}
     */
    public function setNamingStrategy(\Zend\Stdlib\Hydrator\NamingStrategy\NamingStrategyInterface $strategy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNamingStrategy', array($strategy));

        return parent::setNamingStrategy($strategy);
    }

    /**
     * {@inheritDoc}
     */
    public function removeNamingStrategy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeNamingStrategy', array());

        return parent::removeNamingStrategy();
    }

    /**
     * {@inheritDoc}
     */
    public function getStrategy($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStrategy', array($name));

        return parent::getStrategy($name);
    }

    /**
     * {@inheritDoc}
     */
    public function hasStrategy($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasStrategy', array($name));

        return parent::hasStrategy($name);
    }

    /**
     * {@inheritDoc}
     */
    public function addStrategy($name, \Zend\Stdlib\Hydrator\Strategy\StrategyInterface $strategy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addStrategy', array($name, $strategy));

        return parent::addStrategy($name, $strategy);
    }

    /**
     * {@inheritDoc}
     */
    public function removeStrategy($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeStrategy', array($name));

        return parent::removeStrategy($name);
    }

    /**
     * {@inheritDoc}
     */
    public function extractValue($name, $value, $object = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'extractValue', array($name, $value, $object));

        return parent::extractValue($name, $value, $object);
    }

    /**
     * {@inheritDoc}
     */
    public function hydrateValue($name, $value, $data = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hydrateValue', array($name, $value, $data));

        return parent::hydrateValue($name, $value, $data);
    }

    /**
     * {@inheritDoc}
     */
    public function extractName($name, $object = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'extractName', array($name, $object));

        return parent::extractName($name, $object);
    }

    /**
     * {@inheritDoc}
     */
    public function hydrateName($name, $data = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hydrateName', array($name, $data));

        return parent::hydrateName($name, $data);
    }

    /**
     * {@inheritDoc}
     */
    public function getFilter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFilter', array());

        return parent::getFilter();
    }

    /**
     * {@inheritDoc}
     */
    public function hasFilter($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasFilter', array($name));

        return parent::hasFilter($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getNamingStrategy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNamingStrategy', array());

        return parent::getNamingStrategy();
    }

    /**
     * {@inheritDoc}
     */
    public function hasNamingStrategy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasNamingStrategy', array());

        return parent::hasNamingStrategy();
    }

}
