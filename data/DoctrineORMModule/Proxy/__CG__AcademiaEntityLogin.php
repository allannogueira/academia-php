<?php

namespace DoctrineORMModule\Proxy\__CG__\Academia\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Login extends \Academia\Entity\Login implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Academia\\Entity\\Login' . "\0" . 'idLogin', '' . "\0" . 'Academia\\Entity\\Login' . "\0" . 'email', '' . "\0" . 'Academia\\Entity\\Login' . "\0" . 'senha', '' . "\0" . 'Academia\\Entity\\Login' . "\0" . 'idProfissional', '' . "\0" . 'Academia\\Entity\\Login' . "\0" . 'idAdministrador', '' . "\0" . 'Academia\\Entity\\Login' . "\0" . 'idAluno', '' . "\0" . 'Academia\\Entity\\Login' . "\0" . 'idAcademia', '' . "\0" . 'Academia\\Entity\\Login' . "\0" . 'codTipoLogin');
        }

        return array('__isInitialized__', '' . "\0" . 'Academia\\Entity\\Login' . "\0" . 'idLogin', '' . "\0" . 'Academia\\Entity\\Login' . "\0" . 'email', '' . "\0" . 'Academia\\Entity\\Login' . "\0" . 'senha', '' . "\0" . 'Academia\\Entity\\Login' . "\0" . 'idProfissional', '' . "\0" . 'Academia\\Entity\\Login' . "\0" . 'idAdministrador', '' . "\0" . 'Academia\\Entity\\Login' . "\0" . 'idAluno', '' . "\0" . 'Academia\\Entity\\Login' . "\0" . 'idAcademia', '' . "\0" . 'Academia\\Entity\\Login' . "\0" . 'codTipoLogin');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Login $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdLogin()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdLogin();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdLogin', array());

        return parent::getIdLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setSenha($senha)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSenha', array($senha));

        return parent::setSenha($senha);
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($senha)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', array($senha));

        return parent::setPassword($senha);
    }

    /**
     * {@inheritDoc}
     */
    public function getSenha()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSenha', array());

        return parent::getSenha();
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', array());

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdProfissional(\Academia\Entity\Profissional $idProfissional = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdProfissional', array($idProfissional));

        return parent::setIdProfissional($idProfissional);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdProfissional()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdProfissional', array());

        return parent::getIdProfissional();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdAdministrador($idAdministrador)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdAdministrador', array($idAdministrador));

        return parent::setIdAdministrador($idAdministrador);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdAdministrador()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdAdministrador', array());

        return parent::getIdAdministrador();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdAluno(\Academia\Entity\Aluno $idAluno = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdAluno', array($idAluno));

        return parent::setIdAluno($idAluno);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getIdAluno()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdAluno', array());

        return parent::getIdAluno();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdAcademia(\Academia\Entity\Academia $idAcademia = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdAcademia', array($idAcademia));

        return parent::setIdAcademia($idAcademia);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdAcademia()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdAcademia', array());

        return parent::getIdAcademia();
    }

    /**
     * {@inheritDoc}
     */
    public function setCodTipoLogin(\Academia\Entity\TipoLogin $codTipoLogin = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCodTipoLogin', array($codTipoLogin));

        return parent::setCodTipoLogin($codTipoLogin);
    }

    /**
     * {@inheritDoc}
     */
    public function getCodTipoLogin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCodTipoLogin', array());

        return parent::getCodTipoLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', array());

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray($em)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', array($em));

        return parent::toArray($em);
    }

}
